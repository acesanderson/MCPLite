2025-05-26 08:31:28,225 [INFO] mcplite:95 (configure_logging) - Logging configured with level: DEBUG, trace_mode: True
2025-05-26 08:31:28,225 [INFO] mcplite:44 (<module>) - Initializing MCPLite application
2025-05-26 08:31:28,295 [INFO] __main__:165 (<module>) - Initializing MCPLite Fetch Server
2025-05-26 08:31:28,296 [DEBUG] mcplite:142 (resource) - Detected regular resource.
2025-05-26 08:31:28,296 [DEBUG] mcplite:142 (resource) - Detected regular resource.
2025-05-26 08:31:28,296 [INFO] __main__:330 (<module>) - Starting MCPLite Fetch Server...
2025-05-26 08:31:28,296 [INFO] __main__:331 (<module>) - Configuration: ignore_robots_txt=False, custom_user_agent=Default, proxy_url=None
2025-05-26 08:31:28,296 [INFO] mcplite:71 (run) - Request made to Server from Client.
2025-05-26 08:31:28,296 [INFO] mcplite:78 (run) - Starting the server...
2025-05-26 08:31:28,296 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"63d81fdc47fe4c3d9c1ebc1722c0e6ce","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-26 08:31:28,296 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"63d81fdc47fe4c3d9c1ebc1722c0e6ce","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-26 08:31:28,296 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-26 08:31:28,296 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-26 08:31:28,296 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-26 08:31:28,296 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'capabilities': {'experimental': None, 'logging': None, 'prompts': {'listChanged': True}, 'resources': {'listChanged': True, 'subscribe': True}, 'tools': {'listChanged': False}}, 'protocolVersion': '1.0.0', 'serverInfo': {'name': 'MyMinimalServer', 'version': '0.1.0'}, 'instructions': None}
2025-05-26 08:31:28,297 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"b7379858a5e34da1a2a958f0fca8f899","method":"resources/list","params":null}
2025-05-26 08:31:28,297 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"b7379858a5e34da1a2a958f0fca8f899","method":"resources/list","params":null}
2025-05-26 08:31:28,297 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-26 08:31:28,297 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/list' params=None
2025-05-26 08:31:28,297 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/list' params=None
2025-05-26 08:31:28,297 [INFO] MCPLite.routes.ServerRoutes:147 (resources_list) - Routed to resources_list route: method='resources/list' params=None
2025-05-26 08:31:28,297 [INFO] MCPLite.routes.ServerRoutes:153 (resources_list) - Returning resource list: [ResourceDefinition(uri='fetch://status', name='fetch_status', description='Returns the current status and configuration of the fetch server.', mimeType='text/plain', size=1024), ResourceDefinition(uri='fetch://help', name='fetch_help', description='Returns help information about using the fetch server.', mimeType='text/plain', size=1024)]
2025-05-26 08:31:28,297 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resources': [{'uri': 'fetch://status', 'name': 'fetch_status', 'description': 'Returns the current status and configuration of the fetch server.', 'mimeType': 'text/plain', 'size': 1024}, {'uri': 'fetch://help', 'name': 'fetch_help', 'description': 'Returns help information about using the fetch server.', 'mimeType': 'text/plain', 'size': 1024}], 'nextCursor': None}
2025-05-26 08:31:28,297 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"f40d1b1d859042a4b5361f60cdb2ed89","method":"resources/templates/list","params":null}
2025-05-26 08:31:28,297 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"f40d1b1d859042a4b5361f60cdb2ed89","method":"resources/templates/list","params":null}
2025-05-26 08:31:28,297 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-26 08:31:28,297 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/templates/list' params=None
2025-05-26 08:31:28,297 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/templates/list' params=None
2025-05-26 08:31:28,298 [INFO] MCPLite.routes.ServerRoutes:160 (resources_templates_list) - Routed to resources_templates_list route: method='resources/templates/list' params=None
2025-05-26 08:31:28,298 [INFO] MCPLite.routes.ServerRoutes:166 (resources_templates_list) - Returning resource template list: []
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resourceTemplates': []}
2025-05-26 08:31:28,298 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"79dbd6ce0df24a43ad281008b89d2a11","method":"tools/list","params":null}
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"79dbd6ce0df24a43ad281008b89d2a11","method":"tools/list","params":null}
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/list' params=None
2025-05-26 08:31:28,298 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/list' params=None
2025-05-26 08:31:28,298 [INFO] MCPLite.routes.ServerRoutes:291 (tools_list) - Routed to tools_list route: method='tools/list' params=None
2025-05-26 08:31:28,298 [INFO] MCPLite.routes.ServerRoutes:295 (tools_list) - Returning tool list: [ToolDefinition(name='fetch', description='Fetch a URL from the internet and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n        max_length: Maximum number of characters to return (default: 5000)\n        start_index: Start content from this character index (default: 0)\n        raw: Get raw content without markdown conversion (default: false)\n\n    Returns:\n        The fetched content, optionally converted to markdown', inputSchema=InputSchema(type='object', properties={'url': 'str', 'max_length': 'int', 'start_index': 'int', 'raw': 'bool'}))]
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'tools': [{'name': 'fetch', 'description': 'Fetch a URL from the internet and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n        max_length: Maximum number of characters to return (default: 5000)\n        start_index: Start content from this character index (default: 0)\n        raw: Get raw content without markdown conversion (default: false)\n\n    Returns:\n        The fetched content, optionally converted to markdown', 'inputSchema': {'type': 'object', 'properties': {'url': 'str', 'max_length': 'int', 'start_index': 'int', 'raw': 'bool'}}}], 'nextCursor': None}
2025-05-26 08:31:28,298 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"2c11e6f21e424f7ab61b1b09001a2e10","method":"prompts/list","params":null}
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"2c11e6f21e424f7ab61b1b09001a2e10","method":"prompts/list","params":null}
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='prompts/list' params=None
2025-05-26 08:31:28,298 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='prompts/list' params=None
2025-05-26 08:31:28,298 [INFO] MCPLite.routes.ServerRoutes:132 (prompts_list) - Routed to prompts_list route: method='prompts/list' params=None
2025-05-26 08:31:28,298 [INFO] MCPLite.routes.ServerRoutes:136 (prompts_list) - Returning prompt list: [PromptDefinition(name='fetch_prompt', description='Fetch a URL and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n\n    Returns:\n        A prompt asking to fetch the URL content', arguments=[Argument(name='url', description='', required=True)])]
2025-05-26 08:31:28,298 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'prompts': [{'name': 'fetch_prompt', 'description': 'Fetch a URL and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n\n    Returns:\n        A prompt asking to fetch the URL content', 'arguments': [{'name': 'url', 'description': '', 'required': True}]}], 'nextCursor': None}
2025-05-26 08:31:28,299 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-26 08:31:28,299 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-26 08:31:28,299 [INFO] MCPLite.server.Server:86 (process_message) - Valid JSON-RPC notification, processing...
2025-05-26 08:31:28,299 [INFO] MCPLite.server.Server:126 (_process_notification) - Routing notification: method='notifications/initialized' params={}
2025-05-26 08:31:28,299 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='notifications/initialized' params={}
2025-05-26 08:31:28,299 [INFO] MCPLite.routes.ServerRoutes:66 (initialized) - Received initialized notification - MCP handshake complete
2025-05-26 08:31:28,299 [INFO] MCPLite.routes.ServerRoutes:74 (initialized) - Server fully initialized at 2025-05-26 08:31:28.299268
2025-05-26 08:32:00,227 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"5dac9dfa3a3b4fb5851bd5f4602b7381","method":"tools/call","params":{"name":"fetch","arguments":{"url":"https://modelcontextprotocol.io","max_length":5000,"start_index":0,"raw":false}}}
2025-05-26 08:32:00,228 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"5dac9dfa3a3b4fb5851bd5f4602b7381","method":"tools/call","params":{"name":"fetch","arguments":{"url":"https://modelcontextprotocol.io","max_length":5000,"start_index":0,"raw":false}}}
2025-05-26 08:32:00,228 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-26 08:32:00,228 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/call' params=CallToolRequestParams(name='fetch', arguments={'url': 'https://modelcontextprotocol.io', 'max_length': 5000, 'start_index': 0, 'raw': False})
2025-05-26 08:32:00,228 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/call' params=CallToolRequestParams(name='fetch', arguments={'url': 'https://modelcontextprotocol.io', 'max_length': 5000, 'start_index': 0, 'raw': False})
2025-05-26 08:32:00,228 [INFO] MCPLite.routes.ServerRoutes:255 (tools_call) - Routed to tools_call route: method='tools/call' params=CallToolRequestParams(name='fetch', arguments={'url': 'https://modelcontextprotocol.io', 'max_length': 5000, 'start_index': 0, 'raw': False})
2025-05-26 08:32:00,228 [INFO] MCPLite.routes.ServerRoutes:269 (tools_call) - Calling tool: fetch with arguments: {'url': 'https://modelcontextprotocol.io', 'max_length': 5000, 'start_index': 0, 'raw': False}
2025-05-26 08:32:00,228 [INFO] __main__:188 (fetch) - Fetching URL: https://modelcontextprotocol.io
2025-05-26 08:32:00,535 [DEBUG] urllib3.connectionpool:1049 (_new_conn) - Starting new HTTPS connection (1): modelcontextprotocol.io:443
2025-05-26 08:32:00,680 [DEBUG] urllib3.connectionpool:544 (_make_request) - https://modelcontextprotocol.io:443 "GET / HTTP/1.1" 308 13
2025-05-26 08:32:00,747 [DEBUG] urllib3.connectionpool:544 (_make_request) - https://modelcontextprotocol.io:443 "GET /introduction HTTP/1.1" 200 None
2025-05-26 08:32:00,794 [INFO] __main__:204 (fetch) - Content truncated to 5000 characters
2025-05-26 08:32:00,794 [INFO] __main__:206 (fetch) - Successfully fetched 5000 characters from https://modelcontextprotocol.io
2025-05-26 08:32:00,794 [INFO] MCPLite.routes.ServerRoutes:274 (tools_call) - Returning tool response: CallToolResult + content: [TextContent(annotations=None, type='text', text="Introduction - Model Context Protocol\n\n[Model Context Protocol home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg)](/)\n\nSearch...\n\n- [Python SDK](https://github.com/modelcontextprotocol/python-sdk)\n- [TypeScript SDK](https://github.com/modelcontextprotocol/typescript-sdk)\n- [Java SDK](https://github.com/modelcontextprotocol/java-sdk)\n- [Kotlin SDK](https://github.com/modelcontextprotocol/kotlin-sdk)\n- [C# SDK](https://github.com/modelcontextprotocol/csharp-sdk)\n- [Swift SDK](https://github.com/modelcontextprotocol/swift-sdk)\n\n##### Get Started\n\n* [Introduction](/introduction)\n* Quickstart\n* [Example Servers](/examples)\n* [Example Clients](/clients)\n* [FAQs](/faqs)\n\n##### Tutorials\n\n* [Building MCP with LLMs](/tutorials/building-mcp-with-llms)\n* [Debugging](/docs/tools/debugging)\n* [Inspector](/docs/tools/inspector)\n\n##### Concepts\n\n* [Core architecture](/docs/concepts/architecture)\n* [Resources](/docs/concepts/resources)\n* [Prompts](/docs/concepts/prompts)\n* [Tools](/docs/concepts/tools)\n* [Sampling](/docs/concepts/sampling)\n* [Roots](/docs/concepts/roots)\n* [Transports](/docs/concepts/transports)\n\n##### Development\n\n* [What's New](/development/updates)\n* [Roadmap](/development/roadmap)\n* [Contributing](/development/contributing)\n\n[Model Context Protocol home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg)](/)\n\nSearch...\n\nSearch...\n\nNavigation\n\nGet Started\n\nIntroduction\n\n[User Guide](/introduction)[SDKs](/sdk/java/mcp-overview)[Specification](/specification/2025-03-26)\n\n[User Guide](/introduction)[SDKs](/sdk/java/mcp-overview)[Specification](/specification/2025-03-26)\n\n- [GitHub](https://github.com/modelcontextprotocol)\n\nC# SDK released! Check out [what else is new.](/development/updates)\n\nMCP is an open protocol that standardizes how applications provide context to LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools.\n\n## [\u200b](#why-mcp%3F) Why MCP?\n\nMCP helps you build agents and complex workflows on top of LLMs. LLMs frequently need to integrate with data and tools, and MCP provides:\n\n* A growing list of pre-built integrations that your LLM can directly plug into\n* The flexibility to switch between LLM providers and vendors\n* Best practices for securing your data within your infrastructure\n\n### [\u200b](#general-architecture) General architecture\n\nAt its core, MCP follows a client-server architecture where a host application can connect to multiple servers:\n\n* **MCP Hosts**: Programs like Claude Desktop, IDEs, or AI tools that want to access data through MCP\n* **MCP Clients**: Protocol clients that maintain 1:1 connections with servers\n* **MCP Servers**: Lightweight programs that each expose specific capabilities through the standardized Model Context Protocol\n* **Local Data Sources**: Your computer’s files, databases, and services that MCP servers can securely access\n* **Remote Services**: External systems available over the internet (e.g., through APIs) that MCP servers can connect to\n\n## [\u200b](#get-started) Get started\n\nChoose the path that best fits your needs:\n\n#### [\u200b](#quick-starts) Quick Starts\n\n[## For Server Developers\n\nGet started building your own server to use in Claude for Desktop and other clients](/quickstart/server)[## For Client Developers\n\nGet started building your own client that can integrate with all MCP servers](/quickstart/client)[## For Claude Desktop Users\n\nGet started using pre-built servers in Claude for Desktop](/quickstart/user)\n\n#### [\u200b](#examples) Examples\n\n[## Example Servers\n\nCheck out our gallery of official MCP servers and implementations](/examples)[## Example Clients\n\nView the list of clients that support MCP integrations](/clients)\n\n## [\u200b](#tutorials) Tutorials\n\n[## Building MCP with LLMs\n\nLearn how to use LLMs like Claude to speed up your MCP development](/tutorials/building-mcp-with-llms)[## Debugging Guide\n\nLearn how to effectively debug MCP servers and integrations](/docs/tools/debugging)[## MCP Inspector\n\nTest and inspect your MCP servers with our interactive debugging tool](/docs/tools/inspector)[## MCP Workshop (Video, 2hr)](https://www.youtube.com/watch?v=kQmXtrmQ5Zg)\n\n## [\u200b](#explore-mcp) Explore MCP\n\nDive deeper into MCP’s core concepts and capabilities:\n\n[## Core architecture\n\nUnderstand how MCP connects clients, servers, and LLMs](/docs/concepts/architecture)[## Resources\n\nExpose data and content from your servers to LLMs](/docs/concepts/resources)[## Prompts\n\nCreate reusable prompt templates and workflows](/docs/concepts/prompts)[## Tools\n\nEnable LLMs to perform actions through your server](/docs/concepts/tools)[## Sampling\n\nLet your servers request c")]
2025-05-26 08:32:00,794 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'content': [{'annotations': None, 'type': 'text', 'text': "Introduction - Model Context Protocol\n\n[Model Context Protocol home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg)](/)\n\nSearch...\n\n- [Python SDK](https://github.com/modelcontextprotocol/python-sdk)\n- [TypeScript SDK](https://github.com/modelcontextprotocol/typescript-sdk)\n- [Java SDK](https://github.com/modelcontextprotocol/java-sdk)\n- [Kotlin SDK](https://github.com/modelcontextprotocol/kotlin-sdk)\n- [C# SDK](https://github.com/modelcontextprotocol/csharp-sdk)\n- [Swift SDK](https://github.com/modelcontextprotocol/swift-sdk)\n\n##### Get Started\n\n* [Introduction](/introduction)\n* Quickstart\n* [Example Servers](/examples)\n* [Example Clients](/clients)\n* [FAQs](/faqs)\n\n##### Tutorials\n\n* [Building MCP with LLMs](/tutorials/building-mcp-with-llms)\n* [Debugging](/docs/tools/debugging)\n* [Inspector](/docs/tools/inspector)\n\n##### Concepts\n\n* [Core architecture](/docs/concepts/architecture)\n* [Resources](/docs/concepts/resources)\n* [Prompts](/docs/concepts/prompts)\n* [Tools](/docs/concepts/tools)\n* [Sampling](/docs/concepts/sampling)\n* [Roots](/docs/concepts/roots)\n* [Transports](/docs/concepts/transports)\n\n##### Development\n\n* [What's New](/development/updates)\n* [Roadmap](/development/roadmap)\n* [Contributing](/development/contributing)\n\n[Model Context Protocol home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg)](/)\n\nSearch...\n\nSearch...\n\nNavigation\n\nGet Started\n\nIntroduction\n\n[User Guide](/introduction)[SDKs](/sdk/java/mcp-overview)[Specification](/specification/2025-03-26)\n\n[User Guide](/introduction)[SDKs](/sdk/java/mcp-overview)[Specification](/specification/2025-03-26)\n\n- [GitHub](https://github.com/modelcontextprotocol)\n\nC# SDK released! Check out [what else is new.](/development/updates)\n\nMCP is an open protocol that standardizes how applications provide context to LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools.\n\n## [\u200b](#why-mcp%3F) Why MCP?\n\nMCP helps you build agents and complex workflows on top of LLMs. LLMs frequently need to integrate with data and tools, and MCP provides:\n\n* A growing list of pre-built integrations that your LLM can directly plug into\n* The flexibility to switch between LLM providers and vendors\n* Best practices for securing your data within your infrastructure\n\n### [\u200b](#general-architecture) General architecture\n\nAt its core, MCP follows a client-server architecture where a host application can connect to multiple servers:\n\n* **MCP Hosts**: Programs like Claude Desktop, IDEs, or AI tools that want to access data through MCP\n* **MCP Clients**: Protocol clients that maintain 1:1 connections with servers\n* **MCP Servers**: Lightweight programs that each expose specific capabilities through the standardized Model Context Protocol\n* **Local Data Sources**: Your computer’s files, databases, and services that MCP servers can securely access\n* **Remote Services**: External systems available over the internet (e.g., through APIs) that MCP servers can connect to\n\n## [\u200b](#get-started) Get started\n\nChoose the path that best fits your needs:\n\n#### [\u200b](#quick-starts) Quick Starts\n\n[## For Server Developers\n\nGet started building your own server to use in Claude for Desktop and other clients](/quickstart/server)[## For Client Developers\n\nGet started building your own client that can integrate with all MCP servers](/quickstart/client)[## For Claude Desktop Users\n\nGet started using pre-built servers in Claude for Desktop](/quickstart/user)\n\n#### [\u200b](#examples) Examples\n\n[## Example Servers\n\nCheck out our gallery of official MCP servers and implementations](/examples)[## Example Clients\n\nView the list of clients that support MCP integrations](/clients)\n\n## [\u200b](#tutorials) Tutorials\n\n[## Building MCP with LLMs\n\nLearn how to use LLMs like Claude to speed up your MCP development](/tutorials/building-mcp-with-llms)[## Debugging Guide\n\nLearn how to effectively debug MCP servers and integrations](/docs/tools/debugging)[## MCP Inspector\n\nTest and inspect your MCP servers with our interactive debugging tool](/docs/tools/inspector)[## MCP Workshop (Video, 2hr)](https://www.youtube.com/watch?v=kQmXtrmQ5Zg)\n\n## [\u200b](#explore-mcp) Explore MCP\n\nDive deeper into MCP’s core concepts and capabilities:\n\n[## Core architecture\n\nUnderstand how MCP connects clients, servers, and LLMs](/docs/concepts/architecture)[## Resources\n\nExpose data and content from your servers to LLMs](/docs/concepts/resources)[## Prompts\n\nCreate reusable prompt templates and workflows](/docs/concepts/prompts)[## Tools\n\nEnable LLMs to perform actions through your server](/docs/concepts/tools)[## Sampling\n\nLet your servers request c"}], 'isError': False}
2025-05-26 08:33:14,107 [INFO] MCPLite.transport.StdioTransport:169 (read_json_message) - No JSON message received.
2025-05-29 19:32:22,255 [INFO] mcplite:95 (configure_logging) - Logging configured with level: DEBUG, trace_mode: True
2025-05-29 19:32:22,255 [INFO] mcplite:44 (<module>) - Initializing MCPLite application
2025-05-29 19:32:23,599 [INFO] mcplite:71 (run) - Request made to Server from Client.
2025-05-29 19:32:23,600 [INFO] mcplite:78 (run) - Starting the server...
2025-05-29 19:32:23,600 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"817470fd0648415dad5b26dae256efc8","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:32:23,600 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"817470fd0648415dad5b26dae256efc8","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:32:23,600 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:23,600 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:32:23,601 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:32:23,601 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'capabilities': {'experimental': None, 'logging': None, 'prompts': {'listChanged': True}, 'resources': {'listChanged': True, 'subscribe': True}, 'tools': {'listChanged': False}}, 'protocolVersion': '1.0.0', 'serverInfo': {'name': 'MyMinimalServer', 'version': '0.1.0'}, 'instructions': None}
2025-05-29 19:32:23,602 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"70160aeeaf7341068daded1fd2fe2a1b","method":"resources/list","params":null}
2025-05-29 19:32:23,602 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"70160aeeaf7341068daded1fd2fe2a1b","method":"resources/list","params":null}
2025-05-29 19:32:23,602 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:23,602 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/list' params=None
2025-05-29 19:32:23,602 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/list' params=None
2025-05-29 19:32:23,603 [INFO] MCPLite.routes.ServerRoutes:147 (resources_list) - Routed to resources_list route: method='resources/list' params=None
2025-05-29 19:32:23,603 [INFO] MCPLite.routes.ServerRoutes:153 (resources_list) - Returning resource list: []
2025-05-29 19:32:23,603 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resources': [], 'nextCursor': None}
2025-05-29 19:32:23,603 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"5cdf8cf735854b4288046d72bd1c3446","method":"resources/templates/list","params":null}
2025-05-29 19:32:23,604 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"5cdf8cf735854b4288046d72bd1c3446","method":"resources/templates/list","params":null}
2025-05-29 19:32:23,604 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:23,604 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:32:23,604 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:32:23,604 [INFO] MCPLite.routes.ServerRoutes:160 (resources_templates_list) - Routed to resources_templates_list route: method='resources/templates/list' params=None
2025-05-29 19:32:23,604 [INFO] MCPLite.routes.ServerRoutes:166 (resources_templates_list) - Returning resource template list: []
2025-05-29 19:32:23,604 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resourceTemplates': []}
2025-05-29 19:32:23,605 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"7e303d3c643c443fbafa0cb82ed06881","method":"tools/list","params":null}
2025-05-29 19:32:23,605 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"7e303d3c643c443fbafa0cb82ed06881","method":"tools/list","params":null}
2025-05-29 19:32:23,605 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:23,605 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/list' params=None
2025-05-29 19:32:23,605 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/list' params=None
2025-05-29 19:32:23,605 [INFO] MCPLite.routes.ServerRoutes:291 (tools_list) - Routed to tools_list route: method='tools/list' params=None
2025-05-29 19:32:23,606 [INFO] MCPLite.routes.ServerRoutes:295 (tools_list) - Returning tool list: [ToolDefinition(name='search_files', description='Recursively search for files/directories from a starting directory\n    within the OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str', 'pattern': 'str', 'excludePatterns': 'list'})), ToolDefinition(name='read_file', description='Read complete contents of a file within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='read_multiple_files', description='Read multiple files simultaneously within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'paths': 'list'})), ToolDefinition(name='list_directory', description='List directory contents with [FILE] or [DIR] prefixes.\n    The directory must be within the OBSIDIAN_PATH sandbox.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='get_file_info', description='Get detailed file/directory metadata for items within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='list_allowed_directories', description='List all directories the server is allowed to access (subdirectories of OBSIDIAN_PATH).', inputSchema=InputSchema(type='object', properties={}))]
2025-05-29 19:32:23,606 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'tools': [{'name': 'search_files', 'description': 'Recursively search for files/directories from a starting directory\n    within the OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str', 'pattern': 'str', 'excludePatterns': 'list'}}}, {'name': 'read_file', 'description': 'Read complete contents of a file within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'read_multiple_files', 'description': 'Read multiple files simultaneously within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'paths': 'list'}}}, {'name': 'list_directory', 'description': 'List directory contents with [FILE] or [DIR] prefixes.\n    The directory must be within the OBSIDIAN_PATH sandbox.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'get_file_info', 'description': 'Get detailed file/directory metadata for items within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'list_allowed_directories', 'description': 'List all directories the server is allowed to access (subdirectories of OBSIDIAN_PATH).', 'inputSchema': {'type': 'object', 'properties': {}}}], 'nextCursor': None}
2025-05-29 19:32:23,607 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"d99e41e732994b91993321b066877d1e","method":"prompts/list","params":null}
2025-05-29 19:32:23,607 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"d99e41e732994b91993321b066877d1e","method":"prompts/list","params":null}
2025-05-29 19:32:23,607 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:23,607 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='prompts/list' params=None
2025-05-29 19:32:23,607 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='prompts/list' params=None
2025-05-29 19:32:23,607 [INFO] MCPLite.routes.ServerRoutes:132 (prompts_list) - Routed to prompts_list route: method='prompts/list' params=None
2025-05-29 19:32:23,607 [INFO] MCPLite.routes.ServerRoutes:136 (prompts_list) - Returning prompt list: []
2025-05-29 19:32:23,607 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'prompts': [], 'nextCursor': None}
2025-05-29 19:32:23,608 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:32:23,608 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:32:23,608 [INFO] MCPLite.server.Server:86 (process_message) - Valid JSON-RPC notification, processing...
2025-05-29 19:32:23,608 [INFO] MCPLite.server.Server:126 (_process_notification) - Routing notification: method='notifications/initialized' params={}
2025-05-29 19:32:23,608 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='notifications/initialized' params={}
2025-05-29 19:32:23,608 [INFO] MCPLite.routes.ServerRoutes:66 (initialized) - Received initialized notification - MCP handshake complete
2025-05-29 19:32:23,608 [INFO] MCPLite.routes.ServerRoutes:74 (initialized) - Server fully initialized at 2025-05-29 19:32:23.608569
2025-05-29 19:32:24,010 [INFO] mcplite:95 (configure_logging) - Logging configured with level: DEBUG, trace_mode: True
2025-05-29 19:32:24,010 [INFO] mcplite:44 (<module>) - Initializing MCPLite application
2025-05-29 19:32:24,080 [INFO] __main__:165 (<module>) - Initializing MCPLite Fetch Server
2025-05-29 19:32:24,081 [DEBUG] mcplite:142 (resource) - Detected regular resource.
2025-05-29 19:32:24,081 [DEBUG] mcplite:142 (resource) - Detected regular resource.
2025-05-29 19:32:24,081 [INFO] __main__:330 (<module>) - Starting MCPLite Fetch Server...
2025-05-29 19:32:24,081 [INFO] __main__:331 (<module>) - Configuration: ignore_robots_txt=False, custom_user_agent=Default, proxy_url=None
2025-05-29 19:32:24,081 [INFO] mcplite:71 (run) - Request made to Server from Client.
2025-05-29 19:32:24,081 [INFO] mcplite:78 (run) - Starting the server...
2025-05-29 19:32:24,081 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"23eb02b1f5ee4124aa91956e084c28e6","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:32:24,081 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"23eb02b1f5ee4124aa91956e084c28e6","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:32:24,081 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:24,081 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:32:24,081 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:32:24,081 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'capabilities': {'experimental': None, 'logging': None, 'prompts': {'listChanged': True}, 'resources': {'listChanged': True, 'subscribe': True}, 'tools': {'listChanged': False}}, 'protocolVersion': '1.0.0', 'serverInfo': {'name': 'MyMinimalServer', 'version': '0.1.0'}, 'instructions': None}
2025-05-29 19:32:24,082 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"9b81c030b71443f1848fb46d38982b1d","method":"resources/list","params":null}
2025-05-29 19:32:24,082 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"9b81c030b71443f1848fb46d38982b1d","method":"resources/list","params":null}
2025-05-29 19:32:24,082 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:24,082 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/list' params=None
2025-05-29 19:32:24,082 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/list' params=None
2025-05-29 19:32:24,082 [INFO] MCPLite.routes.ServerRoutes:147 (resources_list) - Routed to resources_list route: method='resources/list' params=None
2025-05-29 19:32:24,082 [INFO] MCPLite.routes.ServerRoutes:153 (resources_list) - Returning resource list: [ResourceDefinition(uri='fetch://status', name='fetch_status', description='Returns the current status and configuration of the fetch server.', mimeType='text/plain', size=1024), ResourceDefinition(uri='fetch://help', name='fetch_help', description='Returns help information about using the fetch server.', mimeType='text/plain', size=1024)]
2025-05-29 19:32:24,082 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resources': [{'uri': 'fetch://status', 'name': 'fetch_status', 'description': 'Returns the current status and configuration of the fetch server.', 'mimeType': 'text/plain', 'size': 1024}, {'uri': 'fetch://help', 'name': 'fetch_help', 'description': 'Returns help information about using the fetch server.', 'mimeType': 'text/plain', 'size': 1024}], 'nextCursor': None}
2025-05-29 19:32:24,082 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"3549d4c033c146c792e0ec76abf43faa","method":"resources/templates/list","params":null}
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"3549d4c033c146c792e0ec76abf43faa","method":"resources/templates/list","params":null}
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:32:24,083 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:32:24,083 [INFO] MCPLite.routes.ServerRoutes:160 (resources_templates_list) - Routed to resources_templates_list route: method='resources/templates/list' params=None
2025-05-29 19:32:24,083 [INFO] MCPLite.routes.ServerRoutes:166 (resources_templates_list) - Returning resource template list: []
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resourceTemplates': []}
2025-05-29 19:32:24,083 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"17c6a3d16a13440284f245b0d7c35154","method":"tools/list","params":null}
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"17c6a3d16a13440284f245b0d7c35154","method":"tools/list","params":null}
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/list' params=None
2025-05-29 19:32:24,083 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/list' params=None
2025-05-29 19:32:24,083 [INFO] MCPLite.routes.ServerRoutes:291 (tools_list) - Routed to tools_list route: method='tools/list' params=None
2025-05-29 19:32:24,083 [INFO] MCPLite.routes.ServerRoutes:295 (tools_list) - Returning tool list: [ToolDefinition(name='fetch', description='Fetch a URL from the internet and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n        max_length: Maximum number of characters to return (default: 5000)\n        start_index: Start content from this character index (default: 0)\n        raw: Get raw content without markdown conversion (default: false)\n\n    Returns:\n        The fetched content, optionally converted to markdown', inputSchema=InputSchema(type='object', properties={'url': 'str', 'max_length': 'int', 'start_index': 'int', 'raw': 'bool'}))]
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'tools': [{'name': 'fetch', 'description': 'Fetch a URL from the internet and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n        max_length: Maximum number of characters to return (default: 5000)\n        start_index: Start content from this character index (default: 0)\n        raw: Get raw content without markdown conversion (default: false)\n\n    Returns:\n        The fetched content, optionally converted to markdown', 'inputSchema': {'type': 'object', 'properties': {'url': 'str', 'max_length': 'int', 'start_index': 'int', 'raw': 'bool'}}}], 'nextCursor': None}
2025-05-29 19:32:24,083 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"d8bf273b02f2479d8e944b02a7efc2f6","method":"prompts/list","params":null}
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"d8bf273b02f2479d8e944b02a7efc2f6","method":"prompts/list","params":null}
2025-05-29 19:32:24,083 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:32:24,084 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='prompts/list' params=None
2025-05-29 19:32:24,084 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='prompts/list' params=None
2025-05-29 19:32:24,084 [INFO] MCPLite.routes.ServerRoutes:132 (prompts_list) - Routed to prompts_list route: method='prompts/list' params=None
2025-05-29 19:32:24,084 [INFO] MCPLite.routes.ServerRoutes:136 (prompts_list) - Returning prompt list: [PromptDefinition(name='fetch_prompt', description='Fetch a URL and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n\n    Returns:\n        A prompt asking to fetch the URL content', arguments=[Argument(name='url', description='', required=True)])]
2025-05-29 19:32:24,084 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'prompts': [{'name': 'fetch_prompt', 'description': 'Fetch a URL and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n\n    Returns:\n        A prompt asking to fetch the URL content', 'arguments': [{'name': 'url', 'description': '', 'required': True}]}], 'nextCursor': None}
2025-05-29 19:32:24,084 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:32:24,084 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:32:24,084 [INFO] MCPLite.server.Server:86 (process_message) - Valid JSON-RPC notification, processing...
2025-05-29 19:32:24,084 [INFO] MCPLite.server.Server:126 (_process_notification) - Routing notification: method='notifications/initialized' params={}
2025-05-29 19:32:24,084 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='notifications/initialized' params={}
2025-05-29 19:32:24,084 [INFO] MCPLite.routes.ServerRoutes:66 (initialized) - Received initialized notification - MCP handshake complete
2025-05-29 19:32:24,084 [INFO] MCPLite.routes.ServerRoutes:74 (initialized) - Server fully initialized at 2025-05-29 19:32:24.084503
2025-05-29 19:32:52,772 [INFO] MCPLite.transport.StdioTransport:169 (read_json_message) - No JSON message received.
2025-05-29 19:32:52,772 [INFO] MCPLite.transport.StdioTransport:169 (read_json_message) - No JSON message received.
2025-05-29 19:34:43,760 [INFO] mcplite:95 (configure_logging) - Logging configured with level: DEBUG, trace_mode: True
2025-05-29 19:34:43,761 [INFO] mcplite:44 (<module>) - Initializing MCPLite application
2025-05-29 19:34:45,002 [INFO] mcplite:71 (run) - Request made to Server from Client.
2025-05-29 19:34:45,002 [INFO] mcplite:78 (run) - Starting the server...
2025-05-29 19:34:45,005 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"ee5d884f475e475497749223f0aaf4e8","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:34:45,005 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"ee5d884f475e475497749223f0aaf4e8","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:34:45,005 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:34:45,005 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:34:45,005 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:34:45,005 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'capabilities': {'experimental': None, 'logging': None, 'prompts': {'listChanged': True}, 'resources': {'listChanged': True, 'subscribe': True}, 'tools': {'listChanged': False}}, 'protocolVersion': '1.0.0', 'serverInfo': {'name': 'MyMinimalServer', 'version': '0.1.0'}, 'instructions': None}
2025-05-29 19:34:45,006 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"81dfad86e5f44665a8ea640abd0e3b12","method":"resources/list","params":null}
2025-05-29 19:34:45,006 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"81dfad86e5f44665a8ea640abd0e3b12","method":"resources/list","params":null}
2025-05-29 19:34:45,007 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:34:45,007 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/list' params=None
2025-05-29 19:34:45,007 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/list' params=None
2025-05-29 19:34:45,007 [INFO] MCPLite.routes.ServerRoutes:147 (resources_list) - Routed to resources_list route: method='resources/list' params=None
2025-05-29 19:34:45,007 [INFO] MCPLite.routes.ServerRoutes:153 (resources_list) - Returning resource list: []
2025-05-29 19:34:45,007 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resources': [], 'nextCursor': None}
2025-05-29 19:34:45,008 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"c3af9c68966b498791bbdc5955b8020b","method":"resources/templates/list","params":null}
2025-05-29 19:34:45,008 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"c3af9c68966b498791bbdc5955b8020b","method":"resources/templates/list","params":null}
2025-05-29 19:34:45,008 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:34:45,008 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:34:45,008 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:34:45,008 [INFO] MCPLite.routes.ServerRoutes:160 (resources_templates_list) - Routed to resources_templates_list route: method='resources/templates/list' params=None
2025-05-29 19:34:45,008 [INFO] MCPLite.routes.ServerRoutes:166 (resources_templates_list) - Returning resource template list: []
2025-05-29 19:34:45,008 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resourceTemplates': []}
2025-05-29 19:34:45,009 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"d240be6830474bff9505517ac4ae8dad","method":"tools/list","params":null}
2025-05-29 19:34:45,009 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"d240be6830474bff9505517ac4ae8dad","method":"tools/list","params":null}
2025-05-29 19:34:45,009 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:34:45,009 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/list' params=None
2025-05-29 19:34:45,009 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/list' params=None
2025-05-29 19:34:45,009 [INFO] MCPLite.routes.ServerRoutes:291 (tools_list) - Routed to tools_list route: method='tools/list' params=None
2025-05-29 19:34:45,009 [INFO] MCPLite.routes.ServerRoutes:295 (tools_list) - Returning tool list: [ToolDefinition(name='search_files', description='Recursively search for files/directories from a starting directory\n    within the OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str', 'pattern': 'str', 'excludePatterns': 'list'})), ToolDefinition(name='read_file', description='Read complete contents of a file within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='read_multiple_files', description='Read multiple files simultaneously within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'paths': 'list'})), ToolDefinition(name='list_directory', description='List directory contents with [FILE] or [DIR] prefixes.\n    The directory must be within the OBSIDIAN_PATH sandbox.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='get_file_info', description='Get detailed file/directory metadata for items within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='list_allowed_directories', description='List all directories the server is allowed to access (subdirectories of OBSIDIAN_PATH).', inputSchema=InputSchema(type='object', properties={}))]
2025-05-29 19:34:45,009 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'tools': [{'name': 'search_files', 'description': 'Recursively search for files/directories from a starting directory\n    within the OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str', 'pattern': 'str', 'excludePatterns': 'list'}}}, {'name': 'read_file', 'description': 'Read complete contents of a file within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'read_multiple_files', 'description': 'Read multiple files simultaneously within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'paths': 'list'}}}, {'name': 'list_directory', 'description': 'List directory contents with [FILE] or [DIR] prefixes.\n    The directory must be within the OBSIDIAN_PATH sandbox.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'get_file_info', 'description': 'Get detailed file/directory metadata for items within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'list_allowed_directories', 'description': 'List all directories the server is allowed to access (subdirectories of OBSIDIAN_PATH).', 'inputSchema': {'type': 'object', 'properties': {}}}], 'nextCursor': None}
2025-05-29 19:34:45,010 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"798560e6dd4e4084b7e5baf575032f05","method":"prompts/list","params":null}
2025-05-29 19:34:45,010 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"798560e6dd4e4084b7e5baf575032f05","method":"prompts/list","params":null}
2025-05-29 19:34:45,010 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:34:45,011 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='prompts/list' params=None
2025-05-29 19:34:45,011 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='prompts/list' params=None
2025-05-29 19:34:45,011 [INFO] MCPLite.routes.ServerRoutes:132 (prompts_list) - Routed to prompts_list route: method='prompts/list' params=None
2025-05-29 19:34:45,011 [INFO] MCPLite.routes.ServerRoutes:136 (prompts_list) - Returning prompt list: []
2025-05-29 19:34:45,011 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'prompts': [], 'nextCursor': None}
2025-05-29 19:34:45,011 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:34:45,011 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:34:45,011 [INFO] MCPLite.server.Server:86 (process_message) - Valid JSON-RPC notification, processing...
2025-05-29 19:34:45,012 [INFO] MCPLite.server.Server:126 (_process_notification) - Routing notification: method='notifications/initialized' params={}
2025-05-29 19:34:45,012 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='notifications/initialized' params={}
2025-05-29 19:34:45,012 [INFO] MCPLite.routes.ServerRoutes:66 (initialized) - Received initialized notification - MCP handshake complete
2025-05-29 19:34:45,012 [INFO] MCPLite.routes.ServerRoutes:74 (initialized) - Server fully initialized at 2025-05-29 19:34:45.012133
2025-05-29 19:37:56,292 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"ddde6bc04b7c4c9e8e819473b70e40ad","method":"tools/call","params":{"name":"search_files","arguments":{"path":"","pattern":"Summary of my Job.md","excludePatterns":[]}}}
2025-05-29 19:37:56,292 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"ddde6bc04b7c4c9e8e819473b70e40ad","method":"tools/call","params":{"name":"search_files","arguments":{"path":"","pattern":"Summary of my Job.md","excludePatterns":[]}}}
2025-05-29 19:37:56,292 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:37:56,293 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/call' params=CallToolRequestParams(name='search_files', arguments={'path': '', 'pattern': 'Summary of my Job.md', 'excludePatterns': []})
2025-05-29 19:37:56,293 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/call' params=CallToolRequestParams(name='search_files', arguments={'path': '', 'pattern': 'Summary of my Job.md', 'excludePatterns': []})
2025-05-29 19:37:56,293 [INFO] MCPLite.routes.ServerRoutes:255 (tools_call) - Routed to tools_call route: method='tools/call' params=CallToolRequestParams(name='search_files', arguments={'path': '', 'pattern': 'Summary of my Job.md', 'excludePatterns': []})
2025-05-29 19:37:56,293 [INFO] MCPLite.routes.ServerRoutes:269 (tools_call) - Calling tool: search_files with arguments: {'path': '', 'pattern': 'Summary of my Job.md', 'excludePatterns': []}
2025-05-29 19:37:56,293 [ERROR] MCPLite.server.Server:103 (process_message) - Unexpected error: Search path '' is outside the allowed sandbox.
Traceback (most recent call last):
  File "/home/bianders/Brian_Code/MCPLite/server/Server.py", line 81, in process_message
    return self._process_request(json_obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/server/Server.py", line 113, in _process_request
    response: MCPResult = self.route(mcp_request)
                          ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/routes/ServerRoutes.py", line 50, in __call__
    return self.routes[str(message.method)](self, message)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/routes/ServerRoutes.py", line 272, in tools_call
    tool_response: TextContent = tool(**request_dict["params"]["arguments"])
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/primitives/MCPTool.py", line 79, in __call__
    result_content = str(self.function(**kwargs))
                         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/servers/obsidian.py", line 64, in search_files
    raise ValueError(f"Search path '{path}' is outside the allowed sandbox.")
ValueError: Search path '' is outside the allowed sandbox.
2025-05-29 19:38:08,011 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"4713d0eb9cea4502978042845a29d6df","method":"tools/call","params":{"name":"list_directory","arguments":{"path":""}}}
2025-05-29 19:38:08,011 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"4713d0eb9cea4502978042845a29d6df","method":"tools/call","params":{"name":"list_directory","arguments":{"path":""}}}
2025-05-29 19:38:08,011 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:38:08,012 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/call' params=CallToolRequestParams(name='list_directory', arguments={'path': ''})
2025-05-29 19:38:08,012 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/call' params=CallToolRequestParams(name='list_directory', arguments={'path': ''})
2025-05-29 19:38:08,012 [INFO] MCPLite.routes.ServerRoutes:255 (tools_call) - Routed to tools_call route: method='tools/call' params=CallToolRequestParams(name='list_directory', arguments={'path': ''})
2025-05-29 19:38:08,012 [INFO] MCPLite.routes.ServerRoutes:269 (tools_call) - Calling tool: list_directory with arguments: {'path': ''}
2025-05-29 19:38:08,012 [ERROR] MCPLite.server.Server:103 (process_message) - Unexpected error: search_files() missing 1 required positional argument: 'pattern'
Traceback (most recent call last):
  File "/home/bianders/Brian_Code/MCPLite/server/Server.py", line 81, in process_message
    return self._process_request(json_obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/server/Server.py", line 113, in _process_request
    response: MCPResult = self.route(mcp_request)
                          ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/routes/ServerRoutes.py", line 50, in __call__
    return self.routes[str(message.method)](self, message)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/routes/ServerRoutes.py", line 272, in tools_call
    tool_response: TextContent = tool(**request_dict["params"]["arguments"])
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/primitives/MCPTool.py", line 79, in __call__
    result_content = str(self.function(**kwargs))
                         ^^^^^^^^^^^^^^^^^^^^^^^
TypeError: search_files() missing 1 required positional argument: 'pattern'
2025-05-29 19:38:15,866 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"5aa690aaf00f43f0b0f8f94190940195","method":"tools/call","params":{"name":"search_files","arguments":{"path":"","pattern":"Summary of my Job.md","excludePatterns":[]}}}
2025-05-29 19:38:15,867 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"5aa690aaf00f43f0b0f8f94190940195","method":"tools/call","params":{"name":"search_files","arguments":{"path":"","pattern":"Summary of my Job.md","excludePatterns":[]}}}
2025-05-29 19:38:15,867 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:38:15,867 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/call' params=CallToolRequestParams(name='search_files', arguments={'path': '', 'pattern': 'Summary of my Job.md', 'excludePatterns': []})
2025-05-29 19:38:15,867 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/call' params=CallToolRequestParams(name='search_files', arguments={'path': '', 'pattern': 'Summary of my Job.md', 'excludePatterns': []})
2025-05-29 19:38:15,867 [INFO] MCPLite.routes.ServerRoutes:255 (tools_call) - Routed to tools_call route: method='tools/call' params=CallToolRequestParams(name='search_files', arguments={'path': '', 'pattern': 'Summary of my Job.md', 'excludePatterns': []})
2025-05-29 19:38:15,867 [INFO] MCPLite.routes.ServerRoutes:269 (tools_call) - Calling tool: search_files with arguments: {'path': '', 'pattern': 'Summary of my Job.md', 'excludePatterns': []}
2025-05-29 19:38:15,868 [ERROR] MCPLite.server.Server:103 (process_message) - Unexpected error: Search path '' is outside the allowed sandbox.
Traceback (most recent call last):
  File "/home/bianders/Brian_Code/MCPLite/server/Server.py", line 81, in process_message
    return self._process_request(json_obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/server/Server.py", line 113, in _process_request
    response: MCPResult = self.route(mcp_request)
                          ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/routes/ServerRoutes.py", line 50, in __call__
    return self.routes[str(message.method)](self, message)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/routes/ServerRoutes.py", line 272, in tools_call
    tool_response: TextContent = tool(**request_dict["params"]["arguments"])
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/primitives/MCPTool.py", line 79, in __call__
    result_content = str(self.function(**kwargs))
                         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/bianders/Brian_Code/MCPLite/servers/obsidian.py", line 64, in search_files
    raise ValueError(f"Search path '{path}' is outside the allowed sandbox.")
ValueError: Search path '' is outside the allowed sandbox.
2025-05-29 19:38:15,987 [INFO] MCPLite.transport.StdioTransport:169 (read_json_message) - No JSON message received.
2025-05-29 19:39:10,741 [INFO] mcplite:95 (configure_logging) - Logging configured with level: DEBUG, trace_mode: True
2025-05-29 19:39:10,741 [INFO] mcplite:44 (<module>) - Initializing MCPLite application
2025-05-29 19:39:11,957 [INFO] mcplite:71 (run) - Request made to Server from Client.
2025-05-29 19:39:11,957 [INFO] mcplite:78 (run) - Starting the server...
2025-05-29 19:39:11,957 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"c78db178f4a74f03a698d8bcc8894a2a","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:39:11,957 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"c78db178f4a74f03a698d8bcc8894a2a","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:39:11,958 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:39:11,958 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:39:11,958 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:39:11,958 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'capabilities': {'experimental': None, 'logging': None, 'prompts': {'listChanged': True}, 'resources': {'listChanged': True, 'subscribe': True}, 'tools': {'listChanged': False}}, 'protocolVersion': '1.0.0', 'serverInfo': {'name': 'MyMinimalServer', 'version': '0.1.0'}, 'instructions': None}
2025-05-29 19:39:11,959 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"7105d08124c9429d82c1dfb8aaba38cc","method":"resources/list","params":null}
2025-05-29 19:39:11,959 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"7105d08124c9429d82c1dfb8aaba38cc","method":"resources/list","params":null}
2025-05-29 19:39:11,960 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:39:11,960 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/list' params=None
2025-05-29 19:39:11,960 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/list' params=None
2025-05-29 19:39:11,960 [INFO] MCPLite.routes.ServerRoutes:147 (resources_list) - Routed to resources_list route: method='resources/list' params=None
2025-05-29 19:39:11,960 [INFO] MCPLite.routes.ServerRoutes:153 (resources_list) - Returning resource list: []
2025-05-29 19:39:11,960 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resources': [], 'nextCursor': None}
2025-05-29 19:39:11,961 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"d146dde15dfe4945a85b26800eb841d8","method":"resources/templates/list","params":null}
2025-05-29 19:39:11,961 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"d146dde15dfe4945a85b26800eb841d8","method":"resources/templates/list","params":null}
2025-05-29 19:39:11,961 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:39:11,961 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:39:11,961 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:39:11,961 [INFO] MCPLite.routes.ServerRoutes:160 (resources_templates_list) - Routed to resources_templates_list route: method='resources/templates/list' params=None
2025-05-29 19:39:11,961 [INFO] MCPLite.routes.ServerRoutes:166 (resources_templates_list) - Returning resource template list: []
2025-05-29 19:39:11,962 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resourceTemplates': []}
2025-05-29 19:39:11,962 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"40d1e83ee201494c852a803219feda2b","method":"tools/list","params":null}
2025-05-29 19:39:11,962 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"40d1e83ee201494c852a803219feda2b","method":"tools/list","params":null}
2025-05-29 19:39:11,962 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:39:11,963 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/list' params=None
2025-05-29 19:39:11,963 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/list' params=None
2025-05-29 19:39:11,963 [INFO] MCPLite.routes.ServerRoutes:291 (tools_list) - Routed to tools_list route: method='tools/list' params=None
2025-05-29 19:39:11,963 [INFO] MCPLite.routes.ServerRoutes:295 (tools_list) - Returning tool list: [ToolDefinition(name='search_files', description='Recursively search for files/directories from a starting directory\n    within the OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str', 'pattern': 'str', 'excludePatterns': 'list'})), ToolDefinition(name='read_file', description='Read complete contents of a file within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='read_multiple_files', description='Read multiple files simultaneously within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'paths': 'list'})), ToolDefinition(name='list_directory', description='List directory contents with [FILE] or [DIR] prefixes.\n    The directory must be within the OBSIDIAN_PATH sandbox.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='get_file_info', description='Get detailed file/directory metadata for items within OBSIDIAN_PATH.', inputSchema=InputSchema(type='object', properties={'path': 'str'})), ToolDefinition(name='list_allowed_directories', description='List all directories the server is allowed to access (subdirectories of OBSIDIAN_PATH).', inputSchema=InputSchema(type='object', properties={}))]
2025-05-29 19:39:11,963 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'tools': [{'name': 'search_files', 'description': 'Recursively search for files/directories from a starting directory\n    within the OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str', 'pattern': 'str', 'excludePatterns': 'list'}}}, {'name': 'read_file', 'description': 'Read complete contents of a file within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'read_multiple_files', 'description': 'Read multiple files simultaneously within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'paths': 'list'}}}, {'name': 'list_directory', 'description': 'List directory contents with [FILE] or [DIR] prefixes.\n    The directory must be within the OBSIDIAN_PATH sandbox.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'get_file_info', 'description': 'Get detailed file/directory metadata for items within OBSIDIAN_PATH.', 'inputSchema': {'type': 'object', 'properties': {'path': 'str'}}}, {'name': 'list_allowed_directories', 'description': 'List all directories the server is allowed to access (subdirectories of OBSIDIAN_PATH).', 'inputSchema': {'type': 'object', 'properties': {}}}], 'nextCursor': None}
2025-05-29 19:39:11,964 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"0a0207be8101471cb2ed27f2e84f5ba0","method":"prompts/list","params":null}
2025-05-29 19:39:11,964 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"0a0207be8101471cb2ed27f2e84f5ba0","method":"prompts/list","params":null}
2025-05-29 19:39:11,964 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:39:11,964 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='prompts/list' params=None
2025-05-29 19:39:11,964 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='prompts/list' params=None
2025-05-29 19:39:11,964 [INFO] MCPLite.routes.ServerRoutes:132 (prompts_list) - Routed to prompts_list route: method='prompts/list' params=None
2025-05-29 19:39:11,964 [INFO] MCPLite.routes.ServerRoutes:136 (prompts_list) - Returning prompt list: []
2025-05-29 19:39:11,965 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'prompts': [], 'nextCursor': None}
2025-05-29 19:39:11,965 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:39:11,965 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:39:11,965 [INFO] MCPLite.server.Server:86 (process_message) - Valid JSON-RPC notification, processing...
2025-05-29 19:39:11,965 [INFO] MCPLite.server.Server:126 (_process_notification) - Routing notification: method='notifications/initialized' params={}
2025-05-29 19:39:11,965 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='notifications/initialized' params={}
2025-05-29 19:39:11,966 [INFO] MCPLite.routes.ServerRoutes:66 (initialized) - Received initialized notification - MCP handshake complete
2025-05-29 19:39:11,966 [INFO] MCPLite.routes.ServerRoutes:74 (initialized) - Server fully initialized at 2025-05-29 19:39:11.966056
2025-05-29 19:39:24,404 [INFO] MCPLite.transport.StdioTransport:169 (read_json_message) - No JSON message received.
2025-05-29 19:40:14,970 [INFO] mcplite:95 (configure_logging) - Logging configured with level: DEBUG, trace_mode: True
2025-05-29 19:40:14,970 [INFO] mcplite:44 (<module>) - Initializing MCPLite application
2025-05-29 19:40:15,041 [INFO] __main__:165 (<module>) - Initializing MCPLite Fetch Server
2025-05-29 19:40:15,041 [DEBUG] mcplite:142 (resource) - Detected regular resource.
2025-05-29 19:40:15,041 [DEBUG] mcplite:142 (resource) - Detected regular resource.
2025-05-29 19:40:15,042 [INFO] __main__:330 (<module>) - Starting MCPLite Fetch Server...
2025-05-29 19:40:15,042 [INFO] __main__:331 (<module>) - Configuration: ignore_robots_txt=False, custom_user_agent=Default, proxy_url=None
2025-05-29 19:40:15,042 [INFO] mcplite:71 (run) - Request made to Server from Client.
2025-05-29 19:40:15,042 [INFO] mcplite:78 (run) - Starting the server...
2025-05-29 19:40:15,042 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"c5280d4632954f4694ed697b943c15b0","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:40:15,042 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"c5280d4632954f4694ed697b943c15b0","method":"initialize","params":{"capabilities":{"experimental":null,"roots":null,"sampling":null},"clientInfo":{"name":"MyMinimalClient","version":"0.1.0"},"protocolVersion":"1.0.0"}}
2025-05-29 19:40:15,042 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:40:15,042 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:40:15,042 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='initialize' params=InitializeRequestParams(capabilities=ClientCapabilities(experimental=None, roots=None, sampling=None), clientInfo=Implementation(name='MyMinimalClient', version='0.1.0'), protocolVersion='1.0.0')
2025-05-29 19:40:15,042 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'capabilities': {'experimental': None, 'logging': None, 'prompts': {'listChanged': True}, 'resources': {'listChanged': True, 'subscribe': True}, 'tools': {'listChanged': False}}, 'protocolVersion': '1.0.0', 'serverInfo': {'name': 'MyMinimalServer', 'version': '0.1.0'}, 'instructions': None}
2025-05-29 19:40:15,042 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"2b65e069e3ae45f6bf74efa1d6c1f3ed","method":"resources/list","params":null}
2025-05-29 19:40:15,042 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"2b65e069e3ae45f6bf74efa1d6c1f3ed","method":"resources/list","params":null}
2025-05-29 19:40:15,042 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:40:15,042 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/list' params=None
2025-05-29 19:40:15,042 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/list' params=None
2025-05-29 19:40:15,042 [INFO] MCPLite.routes.ServerRoutes:147 (resources_list) - Routed to resources_list route: method='resources/list' params=None
2025-05-29 19:40:15,043 [INFO] MCPLite.routes.ServerRoutes:153 (resources_list) - Returning resource list: [ResourceDefinition(uri='fetch://status', name='fetch_status', description='Returns the current status and configuration of the fetch server.', mimeType='text/plain', size=1024), ResourceDefinition(uri='fetch://help', name='fetch_help', description='Returns help information about using the fetch server.', mimeType='text/plain', size=1024)]
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resources': [{'uri': 'fetch://status', 'name': 'fetch_status', 'description': 'Returns the current status and configuration of the fetch server.', 'mimeType': 'text/plain', 'size': 1024}, {'uri': 'fetch://help', 'name': 'fetch_help', 'description': 'Returns help information about using the fetch server.', 'mimeType': 'text/plain', 'size': 1024}], 'nextCursor': None}
2025-05-29 19:40:15,043 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"60fd75b5104a4f3a9ad76cc5dd4418da","method":"resources/templates/list","params":null}
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"60fd75b5104a4f3a9ad76cc5dd4418da","method":"resources/templates/list","params":null}
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:40:15,043 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='resources/templates/list' params=None
2025-05-29 19:40:15,043 [INFO] MCPLite.routes.ServerRoutes:160 (resources_templates_list) - Routed to resources_templates_list route: method='resources/templates/list' params=None
2025-05-29 19:40:15,043 [INFO] MCPLite.routes.ServerRoutes:166 (resources_templates_list) - Returning resource template list: []
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'resourceTemplates': []}
2025-05-29 19:40:15,043 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"2c5d1a23c8254160abdcf524e140c8a0","method":"tools/list","params":null}
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"2c5d1a23c8254160abdcf524e140c8a0","method":"tools/list","params":null}
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/list' params=None
2025-05-29 19:40:15,043 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/list' params=None
2025-05-29 19:40:15,043 [INFO] MCPLite.routes.ServerRoutes:291 (tools_list) - Routed to tools_list route: method='tools/list' params=None
2025-05-29 19:40:15,043 [INFO] MCPLite.routes.ServerRoutes:295 (tools_list) - Returning tool list: [ToolDefinition(name='fetch', description='Fetch a URL from the internet and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n        max_length: Maximum number of characters to return (default: 5000)\n        start_index: Start content from this character index (default: 0)\n        raw: Get raw content without markdown conversion (default: false)\n\n    Returns:\n        The fetched content, optionally converted to markdown', inputSchema=InputSchema(type='object', properties={'url': 'str', 'max_length': 'int', 'start_index': 'int', 'raw': 'bool'}))]
2025-05-29 19:40:15,043 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'tools': [{'name': 'fetch', 'description': 'Fetch a URL from the internet and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n        max_length: Maximum number of characters to return (default: 5000)\n        start_index: Start content from this character index (default: 0)\n        raw: Get raw content without markdown conversion (default: false)\n\n    Returns:\n        The fetched content, optionally converted to markdown', 'inputSchema': {'type': 'object', 'properties': {'url': 'str', 'max_length': 'int', 'start_index': 'int', 'raw': 'bool'}}}], 'nextCursor': None}
2025-05-29 19:40:15,044 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"cbf94d20fa2f46bba0e5719be3103c2b","method":"prompts/list","params":null}
2025-05-29 19:40:15,044 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"cbf94d20fa2f46bba0e5719be3103c2b","method":"prompts/list","params":null}
2025-05-29 19:40:15,044 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:40:15,044 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='prompts/list' params=None
2025-05-29 19:40:15,044 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='prompts/list' params=None
2025-05-29 19:40:15,044 [INFO] MCPLite.routes.ServerRoutes:132 (prompts_list) - Routed to prompts_list route: method='prompts/list' params=None
2025-05-29 19:40:15,044 [INFO] MCPLite.routes.ServerRoutes:136 (prompts_list) - Returning prompt list: [PromptDefinition(name='fetch_prompt', description='Fetch a URL and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n\n    Returns:\n        A prompt asking to fetch the URL content', arguments=[Argument(name='url', description='', required=True)])]
2025-05-29 19:40:15,044 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'prompts': [{'name': 'fetch_prompt', 'description': 'Fetch a URL and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n\n    Returns:\n        A prompt asking to fetch the URL content', 'arguments': [{'name': 'url', 'description': '', 'required': True}]}], 'nextCursor': None}
2025-05-29 19:40:15,044 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:40:15,044 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","method":"notifications/initialized","params":{}}
2025-05-29 19:40:15,044 [INFO] MCPLite.server.Server:86 (process_message) - Valid JSON-RPC notification, processing...
2025-05-29 19:40:15,044 [INFO] MCPLite.server.Server:126 (_process_notification) - Routing notification: method='notifications/initialized' params={}
2025-05-29 19:40:15,044 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='notifications/initialized' params={}
2025-05-29 19:40:15,044 [INFO] MCPLite.routes.ServerRoutes:66 (initialized) - Received initialized notification - MCP handshake complete
2025-05-29 19:40:15,044 [INFO] MCPLite.routes.ServerRoutes:74 (initialized) - Server fully initialized at 2025-05-29 19:40:15.044551
2025-05-29 19:40:36,668 [INFO] MCPLite.transport.StdioTransport:166 (read_json_message) - Received JSON message: {"jsonrpc":"2.0","id":"8b15cba784744c1790045cbf7a6da762","method":"tools/call","params":{"name":"fetch","arguments":{"url":"https://modelcontextprotocol.io","max_length":5000}}}
2025-05-29 19:40:36,669 [INFO] MCPLite.server.Server:57 (process_message) - Server received JSON: {"jsonrpc":"2.0","id":"8b15cba784744c1790045cbf7a6da762","method":"tools/call","params":{"name":"fetch","arguments":{"url":"https://modelcontextprotocol.io","max_length":5000}}}
2025-05-29 19:40:36,669 [INFO] MCPLite.server.Server:80 (process_message) - Valid JSON-RPC request, processing...
2025-05-29 19:40:36,669 [INFO] MCPLite.server.Server:112 (_process_request) - Routing request: method='tools/call' params=CallToolRequestParams(name='fetch', arguments={'url': 'https://modelcontextprotocol.io', 'max_length': 5000})
2025-05-29 19:40:36,669 [INFO] MCPLite.routes.ServerRoutes:47 (__call__) - Routing request: method='tools/call' params=CallToolRequestParams(name='fetch', arguments={'url': 'https://modelcontextprotocol.io', 'max_length': 5000})
2025-05-29 19:40:36,669 [INFO] MCPLite.routes.ServerRoutes:255 (tools_call) - Routed to tools_call route: method='tools/call' params=CallToolRequestParams(name='fetch', arguments={'url': 'https://modelcontextprotocol.io', 'max_length': 5000})
2025-05-29 19:40:36,669 [INFO] MCPLite.routes.ServerRoutes:269 (tools_call) - Calling tool: fetch with arguments: {'url': 'https://modelcontextprotocol.io', 'max_length': 5000}
2025-05-29 19:40:36,669 [INFO] __main__:188 (fetch) - Fetching URL: https://modelcontextprotocol.io
2025-05-29 19:40:37,279 [DEBUG] urllib3.connectionpool:1049 (_new_conn) - Starting new HTTPS connection (1): modelcontextprotocol.io:443
2025-05-29 19:40:37,454 [DEBUG] urllib3.connectionpool:544 (_make_request) - https://modelcontextprotocol.io:443 "GET / HTTP/1.1" 308 13
2025-05-29 19:40:37,527 [DEBUG] urllib3.connectionpool:544 (_make_request) - https://modelcontextprotocol.io:443 "GET /introduction HTTP/1.1" 200 None
2025-05-29 19:40:37,579 [INFO] __main__:204 (fetch) - Content truncated to 5000 characters
2025-05-29 19:40:37,579 [INFO] __main__:206 (fetch) - Successfully fetched 5000 characters from https://modelcontextprotocol.io
2025-05-29 19:40:37,579 [INFO] MCPLite.routes.ServerRoutes:274 (tools_call) - Returning tool response: CallToolResult + content: [TextContent(annotations=None, type='text', text="Introduction - Model Context Protocol\n\n[Model Context Protocol home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg)](/)\n\nSearch...\n\n- [Python SDK](https://github.com/modelcontextprotocol/python-sdk)\n- [TypeScript SDK](https://github.com/modelcontextprotocol/typescript-sdk)\n- [Java SDK](https://github.com/modelcontextprotocol/java-sdk)\n- [Kotlin SDK](https://github.com/modelcontextprotocol/kotlin-sdk)\n- [C# SDK](https://github.com/modelcontextprotocol/csharp-sdk)\n- [Swift SDK](https://github.com/modelcontextprotocol/swift-sdk)\n\n##### Get Started\n\n* [Introduction](/introduction)\n* Quickstart\n* [Example Servers](/examples)\n* [Example Clients](/clients)\n* [FAQs](/faqs)\n\n##### Tutorials\n\n* [Building MCP with LLMs](/tutorials/building-mcp-with-llms)\n* [Debugging](/docs/tools/debugging)\n* [Inspector](/docs/tools/inspector)\n\n##### Concepts\n\n* [Core architecture](/docs/concepts/architecture)\n* [Resources](/docs/concepts/resources)\n* [Prompts](/docs/concepts/prompts)\n* [Tools](/docs/concepts/tools)\n* [Sampling](/docs/concepts/sampling)\n* [Roots](/docs/concepts/roots)\n* [Transports](/docs/concepts/transports)\n\n##### Development\n\n* [What's New](/development/updates)\n* [Roadmap](/development/roadmap)\n* [Contributing](/development/contributing)\n\n[Model Context Protocol home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg)](/)\n\nSearch...\n\nSearch...\n\nNavigation\n\nGet Started\n\nIntroduction\n\n[User Guide](/introduction)[SDKs](/sdk/java/mcp-overview)[Specification](/specification/2025-03-26)\n\n[User Guide](/introduction)[SDKs](/sdk/java/mcp-overview)[Specification](/specification/2025-03-26)\n\n- [GitHub](https://github.com/modelcontextprotocol)\n\nC# SDK released! Check out [what else is new.](/development/updates)\n\nMCP is an open protocol that standardizes how applications provide context to LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools.\n\n## [\u200b](#why-mcp%3F) Why MCP?\n\nMCP helps you build agents and complex workflows on top of LLMs. LLMs frequently need to integrate with data and tools, and MCP provides:\n\n* A growing list of pre-built integrations that your LLM can directly plug into\n* The flexibility to switch between LLM providers and vendors\n* Best practices for securing your data within your infrastructure\n\n### [\u200b](#general-architecture) General architecture\n\nAt its core, MCP follows a client-server architecture where a host application can connect to multiple servers:\n\n* **MCP Hosts**: Programs like Claude Desktop, IDEs, or AI tools that want to access data through MCP\n* **MCP Clients**: Protocol clients that maintain 1:1 connections with servers\n* **MCP Servers**: Lightweight programs that each expose specific capabilities through the standardized Model Context Protocol\n* **Local Data Sources**: Your computer’s files, databases, and services that MCP servers can securely access\n* **Remote Services**: External systems available over the internet (e.g., through APIs) that MCP servers can connect to\n\n## [\u200b](#get-started) Get started\n\nChoose the path that best fits your needs:\n\n#### [\u200b](#quick-starts) Quick Starts\n\n[## For Server Developers\n\nGet started building your own server to use in Claude for Desktop and other clients](/quickstart/server)[## For Client Developers\n\nGet started building your own client that can integrate with all MCP servers](/quickstart/client)[## For Claude Desktop Users\n\nGet started using pre-built servers in Claude for Desktop](/quickstart/user)\n\n#### [\u200b](#examples) Examples\n\n[## Example Servers\n\nCheck out our gallery of official MCP servers and implementations](/examples)[## Example Clients\n\nView the list of clients that support MCP integrations](/clients)\n\n## [\u200b](#tutorials) Tutorials\n\n[## Building MCP with LLMs\n\nLearn how to use LLMs like Claude to speed up your MCP development](/tutorials/building-mcp-with-llms)[## Debugging Guide\n\nLearn how to effectively debug MCP servers and integrations](/docs/tools/debugging)[## MCP Inspector\n\nTest and inspect your MCP servers with our interactive debugging tool](/docs/tools/inspector)[## MCP Workshop (Video, 2hr)](https://www.youtube.com/watch?v=kQmXtrmQ5Zg)\n\n## [\u200b](#explore-mcp) Explore MCP\n\nDive deeper into MCP’s core concepts and capabilities:\n\n[## Core architecture\n\nUnderstand how MCP connects clients, servers, and LLMs](/docs/concepts/architecture)[## Resources\n\nExpose data and content from your servers to LLMs](/docs/concepts/resources)[## Prompts\n\nCreate reusable prompt templates and workflows](/docs/concepts/prompts)[## Tools\n\nEnable LLMs to perform actions through your server](/docs/concepts/tools)[## Sampling\n\nLet your servers request c")]
2025-05-29 19:40:37,579 [INFO] MCPLite.server.Server:119 (_process_request) - Server sending JSON-RPC response: id='blah' jsonrpc='2.0' result={'meta': None, 'content': [{'annotations': None, 'type': 'text', 'text': "Introduction - Model Context Protocol\n\n[Model Context Protocol home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg)](/)\n\nSearch...\n\n- [Python SDK](https://github.com/modelcontextprotocol/python-sdk)\n- [TypeScript SDK](https://github.com/modelcontextprotocol/typescript-sdk)\n- [Java SDK](https://github.com/modelcontextprotocol/java-sdk)\n- [Kotlin SDK](https://github.com/modelcontextprotocol/kotlin-sdk)\n- [C# SDK](https://github.com/modelcontextprotocol/csharp-sdk)\n- [Swift SDK](https://github.com/modelcontextprotocol/swift-sdk)\n\n##### Get Started\n\n* [Introduction](/introduction)\n* Quickstart\n* [Example Servers](/examples)\n* [Example Clients](/clients)\n* [FAQs](/faqs)\n\n##### Tutorials\n\n* [Building MCP with LLMs](/tutorials/building-mcp-with-llms)\n* [Debugging](/docs/tools/debugging)\n* [Inspector](/docs/tools/inspector)\n\n##### Concepts\n\n* [Core architecture](/docs/concepts/architecture)\n* [Resources](/docs/concepts/resources)\n* [Prompts](/docs/concepts/prompts)\n* [Tools](/docs/concepts/tools)\n* [Sampling](/docs/concepts/sampling)\n* [Roots](/docs/concepts/roots)\n* [Transports](/docs/concepts/transports)\n\n##### Development\n\n* [What's New](/development/updates)\n* [Roadmap](/development/roadmap)\n* [Contributing](/development/contributing)\n\n[Model Context Protocol home page![light logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/light.svg)![dark logo](https://mintlify.s3.us-west-1.amazonaws.com/mcp/logo/dark.svg)](/)\n\nSearch...\n\nSearch...\n\nNavigation\n\nGet Started\n\nIntroduction\n\n[User Guide](/introduction)[SDKs](/sdk/java/mcp-overview)[Specification](/specification/2025-03-26)\n\n[User Guide](/introduction)[SDKs](/sdk/java/mcp-overview)[Specification](/specification/2025-03-26)\n\n- [GitHub](https://github.com/modelcontextprotocol)\n\nC# SDK released! Check out [what else is new.](/development/updates)\n\nMCP is an open protocol that standardizes how applications provide context to LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools.\n\n## [\u200b](#why-mcp%3F) Why MCP?\n\nMCP helps you build agents and complex workflows on top of LLMs. LLMs frequently need to integrate with data and tools, and MCP provides:\n\n* A growing list of pre-built integrations that your LLM can directly plug into\n* The flexibility to switch between LLM providers and vendors\n* Best practices for securing your data within your infrastructure\n\n### [\u200b](#general-architecture) General architecture\n\nAt its core, MCP follows a client-server architecture where a host application can connect to multiple servers:\n\n* **MCP Hosts**: Programs like Claude Desktop, IDEs, or AI tools that want to access data through MCP\n* **MCP Clients**: Protocol clients that maintain 1:1 connections with servers\n* **MCP Servers**: Lightweight programs that each expose specific capabilities through the standardized Model Context Protocol\n* **Local Data Sources**: Your computer’s files, databases, and services that MCP servers can securely access\n* **Remote Services**: External systems available over the internet (e.g., through APIs) that MCP servers can connect to\n\n## [\u200b](#get-started) Get started\n\nChoose the path that best fits your needs:\n\n#### [\u200b](#quick-starts) Quick Starts\n\n[## For Server Developers\n\nGet started building your own server to use in Claude for Desktop and other clients](/quickstart/server)[## For Client Developers\n\nGet started building your own client that can integrate with all MCP servers](/quickstart/client)[## For Claude Desktop Users\n\nGet started using pre-built servers in Claude for Desktop](/quickstart/user)\n\n#### [\u200b](#examples) Examples\n\n[## Example Servers\n\nCheck out our gallery of official MCP servers and implementations](/examples)[## Example Clients\n\nView the list of clients that support MCP integrations](/clients)\n\n## [\u200b](#tutorials) Tutorials\n\n[## Building MCP with LLMs\n\nLearn how to use LLMs like Claude to speed up your MCP development](/tutorials/building-mcp-with-llms)[## Debugging Guide\n\nLearn how to effectively debug MCP servers and integrations](/docs/tools/debugging)[## MCP Inspector\n\nTest and inspect your MCP servers with our interactive debugging tool](/docs/tools/inspector)[## MCP Workshop (Video, 2hr)](https://www.youtube.com/watch?v=kQmXtrmQ5Zg)\n\n## [\u200b](#explore-mcp) Explore MCP\n\nDive deeper into MCP’s core concepts and capabilities:\n\n[## Core architecture\n\nUnderstand how MCP connects clients, servers, and LLMs](/docs/concepts/architecture)[## Resources\n\nExpose data and content from your servers to LLMs](/docs/concepts/resources)[## Prompts\n\nCreate reusable prompt templates and workflows](/docs/concepts/prompts)[## Tools\n\nEnable LLMs to perform actions through your server](/docs/concepts/tools)[## Sampling\n\nLet your servers request c"}], 'isError': False}
