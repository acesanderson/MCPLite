{"name":"obsidian","address":{"commands":["python","/home/bianders/Brian_Code/MCPLite/servers/obsidian.py"]},"capabilities":{"resources":[],"tools":[{"name":"search_files","description":"Recursively search for files/directories from a starting directory\n    within the OBSIDIAN_PATH.","inputSchema":{"type":"object","properties":{"path":"str","pattern":"str","excludePatterns":"list"}}},{"name":"read_file","description":"Read complete contents of a file within OBSIDIAN_PATH.","inputSchema":{"type":"object","properties":{"path":"str"}}},{"name":"read_multiple_files","description":"Read multiple files simultaneously within OBSIDIAN_PATH.","inputSchema":{"type":"object","properties":{"paths":"list"}}},{"name":"list_directory","description":"List directory contents with [FILE] or [DIR] prefixes.\n    The directory must be within the OBSIDIAN_PATH sandbox.","inputSchema":{"type":"object","properties":{"path":"str"}}},{"name":"get_file_info","description":"Get detailed file/directory metadata for items within OBSIDIAN_PATH.","inputSchema":{"type":"object","properties":{"path":"str"}}},{"name":"list_allowed_directories","description":"List all directories the server is allowed to access (subdirectories of OBSIDIAN_PATH).","inputSchema":{"type":"object","properties":{}}}],"prompts":[]},"description":"This MCP server provides secure file system access specifically designed for Obsidian vault management, allowing users to interact with their Obsidian notes and files within a sandboxed environment. The server offers comprehensive file operations including searching for files with pattern matching, reading single or multiple files simultaneously, listing directory contents, retrieving file metadata, and viewing allowed access directories.","available":true}
{"name":"fetch","address":{"commands":["python","/home/bianders/Brian_Code/MCPLite/servers/fetch.py"]},"capabilities":{"resources":[{"uri":"fetch://status","name":"fetch_status","description":"Returns the current status and configuration of the fetch server.","mimeType":"text/plain","size":1024},{"uri":"fetch://help","name":"fetch_help","description":"Returns help information about using the fetch server.","mimeType":"text/plain","size":1024}],"tools":[{"name":"fetch","description":"Fetch a URL from the internet and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n        max_length: Maximum number of characters to return (default: 5000)\n        start_index: Start content from this character index (default: 0)\n        raw: Get raw content without markdown conversion (default: false)\n\n    Returns:\n        The fetched content, optionally converted to markdown","inputSchema":{"type":"object","properties":{"url":"str","max_length":"int","start_index":"int","raw":"bool"}}}],"prompts":[{"name":"fetch_prompt","description":"Fetch a URL and extract its contents as markdown.\n\n    Args:\n        url: URL to fetch (required)\n\n    Returns:\n        A prompt asking to fetch the URL content","arguments":[{"name":"url","description":"","required":true}]}]},"description":"This MCP server provides web content fetching capabilities, allowing users to retrieve and process content from URLs on the internet. The server offers a fetch tool that can extract web content as markdown or raw format with configurable length and start position parameters, along with status monitoring resources, help documentation, and a prompt template for URL fetching.","available":true}
